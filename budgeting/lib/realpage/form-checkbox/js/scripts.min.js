angular.module("rpFormCheckbox",[]),function(a,b){"use strict";function c(c,d,e){function f(f,h,i,j){function k(){o.state=p,o.exposeInstance().decorate().bindEvents()}g++;var l,m,n,o={},p={},q="blur.rpFormCheckbox"+g,r="click.rpFormCheckbox"+g,s="focus.rpFormCheckbox"+g;o.setInstanceName=function(){n=i.rpInstanceName?i.rpInstanceName:"rpFormCheckbox"+g},o.exposeInstance=function(){return o.setInstanceName(),f[n]=o,o},o.decorate=function(){return l=e.wrap(n),m=e.inner(n),i.rpWrapperClass&&l.addClass(i.rpWrapperClass),d(l)(f),d(m)(f),h.wrap(l).parent().append(m),o},o.bindEvents=function(){return h.on(s,o.onFocus),m.on(r,o.toggleValue),o},o.toggleValue=function(){if(!o.isDisabled()){var a=i.required,d=c(i.ngModel),e=o.getTrueValue(),g=c(i.ngChange),k=a?b:o.getFalseValue(),l=j.$modelValue==e?k:e;p.focus||h.trigger(s),f.$apply(function(){d.assign(f,l),g(f)})}},o.isDisabled=function(){return f.$eval(i.ngDisabled)===!0},o.onFocus=function(){f.$apply(function(){p.focus=!0,l.addClass("focus"),h.on(q,o.onBlur)})},o.onBlur=function(){f.$apply(function(){h.off(q),p.focus=!1,l.removeClass("focus")})},o.getTrueValue=function(){var a=f.$eval(i.ngTrueValue);return a===b||a},o.getFalseValue=function(){var a=f.$eval(i.ngFalseValue);return a!==b&&a},o.getState=function(){return p.disabled=o.isDisabled(),j&&a.extend(p,{error:j.$invalid,touched:j.$touched,required:j.$required,checked:j.$modelValue===o.getTrueValue()}),p},k()}var g=0;return{link:f,restrict:"C",require:"ngModel"}}a.module("rpFormCheckbox").directive("rpFormCheckbox",["$parse","$compile","rpFormCheckboxHtml",c])}(angular),function(a){"use strict";function b(){var b={};return b.wrap=function(){var b="<div class='rp-checkbox'></div>";return a.element(b)},b.inner=function(b){var c="<div class='rp-checkbox-inner' ng-class='"+b+".getState()'></div>";return a.element(c)},b}a.module("rpFormCheckbox").factory("rpFormCheckboxHtml",[b])}(angular);
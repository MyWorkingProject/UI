angular.module("rpFormTrackChanges",[]),angular.module("rpFormTrackChanges").run(["$templateCache",function(a){a.put("realpage/form-track-changes/templates/unsaved-changes-alert-modal.html",'<div class="modal rp-unsaved-changes-modal am-fade-and-slide-top" tabindex="-1" role="dialog"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" ng-click="$hide()">Ã—</button><h4 class="modal-title">Unsaved Changes</h4></div><div class="modal-body"><p>You are leaving without saving your changes.</p><p>Do you wish to continue?</p></div><div class="modal-footer"><button type="button" ng-click="$hide()" class="btn btn-default">Cancel</button> <button type="button" class="btn btn-primary" ng-click="unsavedChanges.allowChange()">Continue</button></div></div></div></div>')}]),function(a){"use strict";function b(b,c){function d(d,e,f){var g={watchList:c(),disableAlert:a.noop};g.init=function(){var a=f.name+".$dirty",b=d.$watch(a,g.checkState);g.watchList.add(b),b=d.$on("$destroy",g.destroy),g.watchList.add(b)},g.checkState=function(c){c&&g.disableAlert==a.noop?g.disableAlert=b.enableAlert():(g.disableAlert(),g.disableAlert=a.noop)},g.destroy=function(){g.watchList.destroy()},g.init()}return{link:d,restrict:"A"}}a.module("rpFormTrackChanges").directive("rpTrackFormChanges",["rpUnsavedChanges","rpWatchList",b])}(angular),function(a){"use strict";function b(a){function b(b,c,d){var e={};e.init=function(){b.unsavedChanges=e},e.allowChange=function(){b.$hide(),a.onUserAction("continue")},e.init()}return{link:b,restrict:"C"}}a.module("rpFormTrackChanges").directive("rpUnsavedChangesModal",["rpUnsavedChanges",b])}(angular),function(a){"use strict";function b(b,c,d,e){var f,g=1;return f={nextUrl:"",nextState:"",changesList:[],skipCheck:!1},f.init=function(){return f.setDialog().watchStateChange().watchWindowUnload().watchLocationChange(),f},f.setDialog=function(){return f.dialog=e({show:!1,templateUrl:"realpage/form-track-changes/templates/unsaved-changes-alert-modal.html"}),f},f.watchStateChange=function(){return d.$on("$stateChangeStart",f.onStateChange),f},f.watchWindowUnload=function(){var b=a.element(c);return b.on("beforeunload.unsavedChanges",f.onWindowUnload),f},f.watchLocationChange=function(){return d.$on("$locationChangeStart",f.onLocationChange),f},f.enableAlert=function(){var a={id:"change"+g++};return f.skipCheck=!1,f.changesList.push(a),function(){f.changesList=f.changesList.filter(function(b){return b.id!==a.id})}},f.disableAlert=function(){return f.changesList.flush(),f},f.onUserAction=function(a){"continue"==a&&(f.skipCheck=!0,f.disableAlert().allowChange())},f.allowChange=function(){f.nextUrl?(f.goToUrl(f.nextUrl),f.nextUrl=""):f.nextState&&(f.goToState(f.nextState),f.nextState="")},f.goToUrl=function(a){c.location.href=a},f.goToState=function(a){b.go(a)},f.onStateChange=function(a,b){f.hasChanges()&&!f.skipCheck&&(a.preventDefault(),f.nextState=b.name,f.alertUser())},f.onWindowUnload=function(){if(f.hasChanges())return"You are leaving without saving your changes. Do you wish to continue?"},f.onLocationChange=function(a,b){f.hasChanges()&&!f.skipCheck&&(a.preventDefault(),f.nextUrl=b,f.alertUser())},f.hasChanges=function(){return 0!==f.changesList.length},f.alertUser=function(){f.dialog.show()},f.init()}a.module("rpFormTrackChanges").factory("rpUnsavedChanges",["$state","$window","$rootScope","$modal",b])}(angular);
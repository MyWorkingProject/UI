angular.module("rpGrid").run(["$templateCache",function(a){a.put("realpage/grid/templates/grid-datetimepicker-filter.html",'<div class="rp-grid-datetimepicker-filter"><rp-datetimepicker config="filter.config" rp-model="filter.value"></rp-datetimepicker></div>'),a.put("realpage/grid/templates/grid-filters.html",'<div ng-class="model.state" class="{{model.classNames || \'rp-grid-filters-1\'}}"><div class="rp-grid-row"><div ng-switch="filter.config.type" ng-repeat="filter in model.list" class="rp-grid-cell {{::filter.key.decamelize()}}"><select ng-switch-when="menu" class="rp-form-select" rp-wrapper-class="small" name="filter{{::$index}}" ng-change="filter.activate()" rp-update-display-text="true" ng-model="filter.config.value" rp-select-options="filter.config" ng-options="option.value as option.name for option in filter.config.options"></select><input ng-switch-when="text" class="rp-form-input" rp-wrapper-class="small" ng-change="filter.activate()" ng-model="filter.config.value" placeholder="{{::filter.config.placeholder}}"><rp-grid-datetimepicker-filter model="filter" ng-switch-when="datetimepicker"></rp-grid-datetimepicker-filter></div></div></div>'),a.put("realpage/grid/templates/grid-headers.html",'<div class="{{model.classNames || \'rp-grid-headers-1\'}} ft-form"><div class="rp-grid-row" ng-repeat="row in model.rows"><div ng-repeat="header in row" ng-switch="header.config.type" class="rp-grid-cell rp-grid-header {{::header.key.decamelize()}}"><label ng-switch-when="select" class="md-check dark-bluebox ng-hide"><input type="checkbox" ng-true-value="true" ng-false-value="false" class="rp-form-checkbox" ng-model="model.selectModel.selected" ng-change="model.selectModel.publishState()"> <i class="primary"></i></label><span ng-switch-default class="rp-grid-text" ng-class="header.state" ng-click="header.activate()">{{::header.config.text}}</span> <i ng-switch-default ng-class="header.state" class="rp-grid-header-icon"></i><div ng-if="header.hasTooltip" class="rp-grid-header-tooltip {{::header.config.tooltipClass}}"><span ng-click="gridHeaderTooltip.toggleTooltip()" class="rp-grid-header-tooltip-icon {{::header.config.tooltipIcon}}"></span><div ng-show="gridHeaderTooltip.isVisible" class="fdn-arrow box-color text-color rp-grid-header-tooltip-content-wrap"><span class="arrow left white rp-grid-header-tooltip-content-arrow"></span><div class="box-body rp-grid-header-tooltip-content">{{::header.config.tooltipContent}}</div></div></div></div></div></div>'),a.put("realpage/grid/templates/grid.html",'<div class="rp-grid-wrap rp-float-scroll" ng-class="model.state"><div class="rp-grid"><rp-grid-headers model="model.headersModel"></rp-grid-headers><rp-grid-filters model="model.filtersModel"></rp-grid-filters><div class="rp-grid-body-wrap"><rp-busy-indicator model="model.busyModel"></rp-busy-indicator><div class="rp-grid-body-1 ft-form" ng-class="{init: model.state.busy}"><div class="rp-grid-row" ng-repeat="record in model.data.records" ng-class="{active: record[model.getSelectKey()]}"><div ng-switch="config.type" ng-repeat="config in model.config" class="rp-grid-cell {{::config.key.decamelize()}}"><div ng-switch-when="actionsMenu" class="rp-actions-menu" model="config.getActions(record)"></div><label ng-switch-when="select" class="md-check dark-bluebox"><input type="checkbox" ng-true-value="true" ng-false-value="false" class="md-check dark-bluebox" ng-model="record[config.key]" ng-change="model.updateSelected()" ng-disabled="record.disableSelection" rp-track-selection="record[config.key]" rp-track-selection-id="record[config.idKey]" rp-selection-manager="model.selectionManager"> <i class="primary"></i></label><span ng-switch-when="button" class="button {{config.getButtonClassNames(record)}}" ng-click="config.method(record)">{{config.getButtonText(record)}}</span> <a ng-switch-when="link" href="{{config.getLink(record)}}" class="rp-grid-text rp-grid-link">{{record[config.key]}}</a> <span ng-switch-when="actionLink" ng-click="config.method(record)" class="rp-grid-text rp-grid-link">{{record[config.key]}}</span> <span ng-switch-when="date" class="rp-grid-text">{{record[config.key] | date: config.dateFormat || "MM/dd/yyyy"}}</span> <span ng-switch-when="currency" class="rp-grid-text">{{record[config.key] | currency : config.currencySymbol || "$" : config.decimalLength === undefined ? 2 : config.decimalLength}}</span> <span ng-switch-default class="rp-grid-text">{{record[config.key]}}</span></div></div><div class="rp-grid-empty" ng-show="!model.data.records.length"><div class="empty-msg">{{model.emptyMsg || "No results were found."}}</div></div></div></div></div><rp-pagination model="model.paginationModel"></rp-pagination></div>')}]),function(a){"use strict";function b(a){function b(b,c,d){var e={},f=!0;e.init=function(){b.trackSelection=e,e.watchList=a(),e.watchList.add(b.$watch(e.getValue,e.onChange)),e.watchList.add(b.$on("$destroy",e.destroy))},e.getId=function(){return b.$eval(d.rpTrackSelectionId)},e.getManager=function(){return b.$eval(d.rpSelectionManager)},e.getValue=function(){return b.$eval(d.rpTrackSelection)},e.onChange=function(a){f?(f=!1,e.defVal=a):e.recordChange(a)},e.recordChange=function(a){var b,c=e.getId();a===e.defVal?(b="remove"+(a?"Deselected":"Selected"),e.getManager()[b](c)):(b="add"+(a?"Selected":"Deselected"),e.getManager()[b](c))},e.destroy=function(){e.watchList.destroy(),e=void 0,b.trackSelection=void 0},e.init()}return{link:b,restrict:"A"}}a.module("rpGrid").directive("rpTrackSelection",["rpWatchList",b])}(angular),function(a){"use strict";function b(a){return function(){var b={};return b.watch=function(a){b.grid=a,a.subscribe("sortBy",b.sort),a.subscribe("filterBy",b.filter)},b.filter=function(c){void 0===b.gridData&&(b.gridData=[].concat(b.grid.getData().records));var d=a("filter")(b.gridData,c);b.sortBy&&(d=b.sortData(d,b.sortBy)),b.grid.flushData().setData({records:d})},b.sort=function(a){var c=b.grid.getData().records;b.sortBy=a,c=b.sortData(c,a),b.grid.flushData().setData({records:c})},b.sortData=function(b,c){var d=Object.keys(c)[0],e="ASC"!==c[d];return a("naturalSort")(b,d,e)},b.reset=function(){b.sortBy=void 0,b.gridData=void 0},b.destroy=function(){b.reset(),b.grid=void 0,b=void 0},b}}a.module("app").factory("rpGridTransform",["$filter",b])}(angular),function(a){"use strict";function b(a){function b(b,c,d){var e={},f=b.model;e.init=function(){e.value="",e.config=a({onChange:e.onChange}),b.filter=e},e.onChange=function(a){f.setValue(a).activate()},e.init()}return{scope:{model:"="},link:b,restrict:"E",replace:!0,templateUrl:"realpage/grid/templates/grid-datetimepicker-filter.html"}}a.module("rpGrid").directive("rpGridDatetimepickerFilter",["rpDatetimepickerConfig",b])}(angular),function(a){"use strict";function b(a,b){return function(){var c={};return c.events={activate:a()},c.setConfig=function(a){return c.config=a,c.key=a.key,c._defaultValue=a.value,c.delayFiltering="text"==a.type,c},c.getKey=function(){return c.key},c.hasKey=function(a){return c.key==a},c.setValue=function(a){return c.config.value=a,c},c.getValue=function(){return c.config.value},c.isEmpty=function(){return!c.config||""===c.config.value||void 0===c.config.value},c.subscribe=function(a,b){c.events[a].subscribe(b)},c.activate=function(){if(c.delayFiltering){b.cancel(c.timer);var a=c.config.filterDelay,d=void 0===a?400:a;c.timer=b(c.publish,d)}else c.publish()},c.publish=function(){c.events.activate.publish(c)},c.filterBy=function(){return{key:c.key,value:c.config.value}},c.reset=function(){return c.config.value=c._defaultValue,c},c}}a.module("rpGrid").factory("rpGridFilterModel",["eventStream","timeout",b])}(angular),function(a){"use strict";function b(){function a(a,b,c){}return{scope:{model:"="},link:a,restrict:"E",replace:!0,templateUrl:"realpage/grid/templates/grid-filters.html"}}a.module("rpGrid").directive("rpGridFilters",[b])}(angular),function(a){"use strict";function b(a){return function(){var b={list:[],timer:"",filterData:{}};return b.state={active:!1},b.setState=function(a){return b.state=a,b},b.setEvents=function(a){return b.events=a,b},b.setClassNames=function(a){return b.classNames=a,b},b.setConfig=function(c){return b.list.flush(),c.forEach(function(c){var d=a().setConfig(c);d.subscribe("activate",b.activate),b.list.push(d)}),b},b.toggle=function(){return b.state.active=!b.state.active,b},b.getFilterData=function(){return b.list.forEach(function(a){var c=a.getKey();a.isEmpty()?delete b.filterData[c]:b.filterData[c]=a.getValue()}),b.filterData},b.setFilterValue=function(a,c){return b.list.forEach(function(b){b.hasKey(a)&&b.setValue(c)}),b},b.activate=function(){b.events.publish("filterBy",b.getFilterData())},b.reset=function(){b.list.forEach(function(a){a.reset()}),b.list[0].activate()},b}}a.module("rpGrid").factory("rpGridFiltersModel",["rpGridFilterModel",b])}(angular),function(a){"use strict";function b(b,c,d){function e(e,f,g){var h={},i=a.element("body"),j=e.header.getConfig(),k="click.rpGridHeaderTooltip";h.init=function(){h.getContent(),h.isVisible=!1,e.gridHeaderTooltip=h},h.toggleTooltip=function(){h.isVisible=!h.isVisible,i.off(k),h.isVisible&&d(function(){i.one(k,h.hideTooltip)},100)},h.hideTooltip=function(){e.$apply(function(){h.isVisible=!1})},h.getContent=function(){if(j.tooltipUrl){var d=b.get(j.tooltipUrl),g=a.element(d),h=f.find(".rp-grid-header-tooltip-content");g=c(g)(e),h.html("").append(g)}},h.init()}return{link:e,restrict:"C"}}a.module("rpGrid").directive("rpGridHeaderTooltip",["$templateCache","$compile","timeout",b])}(angular),function(a){"use strict";function b(b,c){function d(d,e,f){var g={},h=d.header.config;g.init=function(){if("custom"==h.type){var f=b.get(h.templateUrl),g=a.element(f);g=c(g)(d),e.html("").append(g)}},g.init()}return{link:d,restrict:"C"}}a.module("rpGrid").directive("rpGridHeader",["$templateCache","$compile",b])}(angular),function(a){"use strict";function b(a){return function(){var b,c={};return c.events={activate:a()},c.setConfig=function(a){return c.config=a,c.key=a.key,c.state=b={active:!1,reverse:!1,sortable:a&&a.isSortable},c.hasTooltip=void 0!==a.tooltipContent,c},c.getConfig=function(){return c.config},c.activate=function(){b.sortable&&(b.active?b.reverse=!b.reverse:b.active=!0,c.events.activate.publish(c))},c.is=function(a){return c.key==a.key},c.deactivate=function(){return b.active=!1,b.reverse=!1,c},c.subscribe=function(a,b){return c.events[a].subscribe(b)},c.sortBy=function(){var a={};return a[c.key]=b.reverse?"DESC":"ASC",a},c.isActive=function(){return b.active},c}}a.module("rpGrid").factory("rpGridHeaderModel",["eventStream",b])}(angular),function(a){"use strict";function b(){function a(a,b,c){}return{scope:{model:"="},link:a,restrict:"E",replace:!0,templateUrl:"realpage/grid/templates/grid-headers.html"}}a.module("rpGrid").directive("rpGridHeaders",[b])}(angular),function(a){"use strict";function b(a){return function(){var b={list:[],sortBy:{}};return b.setEvents=function(a){return b.events=a,b},b.setClassNames=function(a){return b.classNames=a,b},b.setConfig=function(c){return b.rows=[],c.forEach(function(c){var d=[];c.forEach(function(c){var e=a().setConfig(c);e.subscribe("activate",b.activate),d.push(e)}),b.rows.push(d)}),b},b.activate=function(a){b.rows.forEach(function(b){b.forEach(function(b){b.is(a)||b.deactivate()})}),b.sortBy=a.sortBy(),b.events.publish("sortBy",b.sortBy)},b.getSortData=function(){return b.sortBy},b.reset=function(){return b.rows.forEach(function(a){a.forEach(function(a){a.deactivate()})}),b},b}}a.module("rpGrid").factory("rpGridHeadersModel",["rpGridHeaderModel",b])}(angular),function(a){"use strict";function b(){return function(){var b={};return b.setSrc=function(a){return b.src=a,b},b.getMethod=function(c){return function(d){return b.src&&b.src[c]?b.src[c](d):a.noop}},b.get=function(){},b}}a.module("rpGrid").factory("rpGridActions",[b])}(angular),function(a){"use strict";function b(){return function(){var a={};return a.setSrc=function(b){return a.src=b,a},a.getMethod=function(b){return function(c){if(a.src){if(a.src[b])return a.src[b](c)}else;}},a.get=function(){return[]},a.getHeaders=function(){return[]},a.getFilters=function(){return[]},a}}a.module("rpGrid").factory("rpGridConfig",[b])}(angular),function(a,b){"use strict";function c(c,d){function e(e,f,g){var h={};h.init=function(){var g=e.config&&e.config.type!==b&&"custom"==e.config.type;if(g){var h=c.get(e.config.templateUrl),i=a.element(h);i=d(i)(e),f.html("").append(i)}},h.init()}return{link:e,restrict:"C"}}a.module("rpGrid").directive("rpGridCell",["$templateCache","$compile",c])}(angular),function(a,b){"use strict";function c(a,c,d,e,f,g){return function(){var h,i,j,k,l,m,n={state:{},emptyMsg:"",data:{records:[]}};return n.init=function(){var b=["ready","sortBy","select","filterBy","paginate","selectAll"];return h=n.busyModel=a(),i=n.events=f(),j=n.headersModel=d(),k=n.filtersModel=e(),m=n.paginationModel=c(),l=n.selectionManager=g(),i.setEvents(b),j.setEvents(i),k.setEvents(i),m.setEvents({update:i.getEvent("paginate")}),i.subscribe("sortBy",n.setSortBy),i.subscribe("select",n.selectAll),i.subscribe("filterBy",n.setFilterBy),n},n.getQuery=function(){return m.getQuery()},n.getData=function(){return n.data},n.getSelectKey=function(){var a="";return n.config.forEach(function(b){"select"==b.type&&(a=b.key)}),a},n.getEvents=function(){return i},n.setConfig=function(a){n.config=a.get(),j.setConfig(a.getHeaders()),k.setConfig(a.getFilters());var b=k.getFilterData();return m.setFilterBy(b),n},n.setEmptyMsg=function(a){return n.emptyMsg=a,n},n.setFilterState=function(a){return k.setState(a),n},n.setData=function(a){return a.records=a.records||[],n.data=a,n.updateSelected(),m.reset().updateState(a.totalRecords),n.events.publish("ready"),n},n.setHeadersClassNames=function(a){return j.setClassNames(a),n},n.setFiltersClassNames=function(a){return k.setClassNames(a),n},n.setGridSelectModel=function(a){return n.gridSelectModel=a,n},n.addData=function(a){return a.records=a.records||[],n.data.records=n.data.records.concat(a.records),n.updateSelected(),m.updateState(a.totalRecords),n.events.publish("ready"),n},n.flushData=function(){return l.reset(),m.reset(),n.data.records.flush(),n},n.deleteRow=function(a,b){return n.data.records=n.data.records.filter(function(c){return c[a]!=b[a]}),m.setCurrent(m.getCurrent()-1),n},n.busy=function(a){return n.state.busy=a,n.busyModel[a?"busy":"off"](),n},n.toggleFilters=function(){return n.gridFilters.toggle(),n},n.selectAll=function(a){var b=n.getSelectKey();n.data.records.forEach(function(c){c.disableSelection!==!0&&(c[b]=a)}),i.publish("selectAll",a)},n.updateSelected=function(){if(n.gridSelectModel){var a=0,b=0,c=!1,d=n.data.records,e=n.getSelectKey();d.forEach(function(c){c.disableSelection!==!0&&(a++,b+=c[e]?1:0)}),c=a>0&&a===b,n.gridSelectModel.updateSelected(c)}},n.hasSelectionChanges=function(){return l.hasChanges()},n.getSelectionChanges=function(){return l.getChanges()},n.setSortBy=function(a){return n.paginationModel.setSortBy(a),n},n.setFilterBy=function(a){return n.paginationModel.setFilterBy(a),n},n.setFilterValue=function(a,b){return k.setFilterValue(a,b),m.setFilterValue(a,b),n},n.setSortValue=function(a,b){return m.setSortValue(a,b),n},n.clearSortValue=function(){return m.clearSortValue(),n},n.resetFilters=function(){return k.reset(),n},n.getFilterData=function(){return k.getFilterData()},n.subscribe=function(a,b){return i.subscribe(a,b)},n.setResultsPerPage=function(a){return m.setResultsPerPage(a),n},n.destroy=function(){n=b},n.init()}}a.module("rpGrid").factory("rpGridModel",["rpBusyIndicatorModel","rpPaginationModel","rpGridHeadersModel","rpGridFiltersModel","eventsManager","rpSelectionManager",c])}(angular),function(a){"use strict";function b(a){function b(b,c,d){var e={},f=b.model;e.init=function(){f.subscribe("ready",e.onReady)},e.onReady=function(){a(e.setVis)},e.setVis=function(){b.floatScroll&&b.floatScroll.setVis().setSize()},e.init()}return{scope:{model:"="},link:b,restrict:"E",replace:!0,templateUrl:"realpage/grid/templates/grid.html"}}a.module("rpGrid").directive("rpGrid",["timeout",b])}(angular);